"""
Добавьте в модуль с загадками функцию, которая принимает на вход строку (текст загадки) и число (номер попытки, с которой она угадана). 
Функция формирует словарь с информацией о результатах отгадывания. 
Для хранения используйте защищённый словарь уровня модуля.
Отдельно напишите функцию, которая выводит результаты угадывания из защищённого словаря в удобном для чтения виде. 
Для формирования результатов используйте генераторное выражение.

"""

# riddles.py

# Защищенный словарь для хранения результатов угадывания
_results = {}


def guess_riddle(riddle, options, attempts):
    """
    Функция для отгадывания загадок.

    Args:
        riddle (str): Загадка.
        options (list): Список с возможными вариантами отгадок.
        attempts (int): Количество попыток на угадывание.

    Returns:
        int: Номер попытки, с которой была отгадана загадка,
             или 0, если попытки исчерпаны.
    """
    print("Угадайте загадку:")
    print(riddle)

    for i in range(1, attempts + 1):
        print(f"Попытка № {i}:")
        guess = input("Введите свой вариант: ").lower()

        if guess in options:
            print("Поздравляем! Вы угадали!")
            return i

        print("Неверный ответ. Попробуйте еще раз.")

    print("Попытки исчерпаны. Загадка не отгадана.")
    return 0


def play_riddles(riddles):
    """
    Функция для игры в загадки.

    Args:
        riddles (dict): Словарь загадок и их возможных ответов.

    Returns:
        None
    """
    for riddle, options in riddles.items():
        result = guess_riddle(riddle, options, 3)  # Здесь 3 - количество попыток на угадывание
        if result == 0:
            print("Загадка не отгадана.")
        else:
            print(f"Загадка отгадана с {result}-й попытки.")
            add_result(riddle, result)


def add_result(riddle, attempt):
    """
    Функция для добавления результата угадывания в защищенный словарь.

    Args:
        riddle (str): Загадка.
        attempt (int): Номер попытки, с которой была угадана загадка.

    Returns:
        None
    """
    _results[riddle] = attempt


def print_results():
    """
    Функция для вывода результатов угадывания.

    Returns:
        None
    """
    print("Результаты угадывания:")
    for riddle, attempt in _results.items():
        print(f"Загадка: {riddle}, Попытка: {attempt}")


# Пример использования
if __name__ == "__main__":
    riddles = {
        "Какое слово начинается с 'e' и заканчивается на 'e', но содержит только одну букву?": ["e"],
        "Что можно увидеть с закрытыми глазами?": ["сон", "мечту", "мрак"],
        "Что покупает бедный, а продает богатый?": ["гробницу"],
    }
    play_riddles(riddles)
    print_results()
